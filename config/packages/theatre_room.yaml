script:

  #Trigger the Hue lights scene for movie watching
  set_movie_lighting:
    sequence:
    - service: script.turn_off_all_lights 
      data: 
          #exclude the theatre room lamps & associated Hue groups from turning off
          excluded_lights: "['light.theatre_room', 'light.theatre_room_2', 'light.theatre_room_left_lamp', 'light.theatre_room_right_lamp', 'light.theatre_room_tv_cabinet_led_strip']"
    - service: hue.hue_activate_scene
      data: 
        group_name: "Theatre Room"
        scene_name: "Movie Watching"
    - service: light.turn_on
      data_template:
        entity_id: light.theatre_room_tv_cabinet_led_strip
        rgb_color: "{{ [[119,73,255],[0,255,255],[255,0,255]]|random }}" #purple, pink or teal
        brightness: 1
    alias: Movie Lighting Scene

  #Trigger the Hue lights scene for movie watching
  set_tv_dinner_lighting:
    sequence:
    - service: hue.hue_activate_scene
      data: 
        group_name: "Theatre Room"
        scene_name: "Movie Watching" 
    - service: light.turn_off
      data:
        entity_id: light.entry_hall_lights
    - service: light.turn_on
      data: 
        entity_id: light.theatre_room_ceiling
    alias: TV Dinner Lighting Scene

  #Trigger the Hue lights scene for party lights
  set_theatre_party_lighting:
    sequence:
    - service: hue.hue_activate_scene
      data: 
        group_name: "Theatre Room"
        scene_name: "Party Lights"
    alias: Theatre Party Lights Scene

  #Get the theatre room ready  
  time_for_a_movie:
    alias: Time For A Movie
    sequence:
      - service: cover.close_cover #this would be triggered anyway, but this call makes it occur faster
        entity_id: cover.theatre_blinds 
      - service: script.turn_on #set the lighting
        entity_id:
          - script.set_movie_lighting 
      - service: media_player.turn_on #turn on the TV
        entity_id:
          - media_player.theatre_room_tv 
      - wait_template: "{{ is_state('media_player.theatre_room_tv', 'on') }}"
      - service: media_player.select_source #switch TV to Plex
        data:
          entity_id: media_player.theatre_room_tv
          source: "Plex"
      - condition: or #all further steps will only run if this condition is true
        conditions:
          - condition: template
            value_template: '{{ (states.sensor.theatre_temperature.state | float) > 26.0 }}' #if theatre room temperature is > 26 degrees
      - service: script.turn_on #cool the theatre room
        entity_id:
          - script.aircon_cool_theatre

  #Get the theatre room ready  
  time_for_a_tv_dinner:
    alias: Time For A TV Dinner
    sequence:
      - service: cover.close_cover #this would be triggered anyway, but this call makes it occur faster
        entity_id: cover.theatre_blinds 
      - service: script.turn_on #set the lighting
        entity_id:
          - script.set_tv_dinner_lighting 
      - service: media_player.turn_on #turn on the TV
        entity_id:
          - media_player.theatre_room_tv 
      - wait_template: "{{ is_state('media_player.theatre_room_tv', 'on') }}"
      - service: media_player.select_source #switch TV to Plex
        data:
          entity_id: media_player.theatre_room_tv
          source: "Plex"
      - condition: or #all further steps will only run if this condition is true
        conditions:
          - condition: template
            value_template: '{{ (states.sensor.theatre_temperature.state | float) > 26.0 }}' #if theatre room temperature is > 26 degrees
      - service: script.turn_on #cool the theatre room
        entity_id:
          - script.aircon_cool_theatre

  #Start a media file from Plex playing on the theatre room TV
  start_plex_media_playing:
    alias: Start Plex Media Playing
    mode: restart
    fields: 
      music_file: 
        description: 'The file location of the song to play at the start of the script'
        example: '/local/Star_Wars.mp3'
      plex_content_type: 
        description: 'The type of Plex content to be played'
        example: 'PLAYLIST'
      plex_content_id:
        description: 'The Plex content ID to play on the TV'
        example: '{ "playlist_name": "Star Wars - The Mandalorian", "shuffle": "0" }'
    sequence:
      - service: media_player.play_media
        data:
          entity_id: media_player.theatre_room_google_home
          media_content_id: '{{ music_file }}'
          media_content_type: 'audio/mp3'
      - service: cover.close_cover #this would be triggered anyway, but this call makes it occur faster
        entity_id: cover.theatre_blinds 
      - service: script.turn_on #set the lighting
        entity_id:
          - script.set_tv_dinner_lighting 
      - service: media_player.turn_on #turn on the TV
        entity_id: media_player.theatre_room_tv 
      - wait_template: "{{ is_state('media_player.theatre_room_tv', 'on') }}"
        timeout: '00:00:20'
      - service: media_player.select_source #switch TV to Plex
        data:
          entity_id: media_player.theatre_room_tv
          source: "Plex"
      - repeat:
          sequence:
            - service: plex.scan_for_clients #Force a refresh of the Plex LG media player
            - delay:
                seconds: 2
          until:
            - condition: template
              value_template: "{{ not is_state('media_player.plex_for_lg', 'unavailable') }}"
      - service: media_player.play_media
        data:
          entity_id: media_player.plex_for_lg
          media_content_type: '{{ plex_content_type }}'
          media_content_id: '{{ plex_content_id }}'
      - condition: or #all further steps will only run if this condition is true
        conditions:
          - condition: template
            value_template: '{{ (states.sensor.theatre_temperature.state | float) > 26.0 }}' #if theatre room temperature is > 26 degrees
      - service: script.turn_on #cool the theatre room
        entity_id:
          - script.aircon_cool_theatre

  turn_off_theatre_room_lights:
    alias: Turn Off Theatre Room Lights
    sequence:
      - service: light.turn_off
        entity_id:
          - light.theatre_room_left_lamp
          - light.theatre_room_right_lamp
          - light.theatre_room_ceiling
      #turn on feet-level lighting to allow people to leave the room
      - service: light.turn_on
        data:
          entity_id: light.theatre_room_tv_cabinet_led_strip
          color_temp: 250
          brightness: 1
      - delay: 
          seconds: 10
      - service: light.turn_off
        entity_id: light.theatre_room_tv_cabinet_led_strip

  turn_on_theatre_room_lights:
    alias: Turn On Theatre Room Lights
    sequence:
      - service: light.turn_on
        entity_id:
          - light.theatre_room_left_lamp
          - light.theatre_room_right_lamp
        data:
          rgb_color: [255,255,255]
          brightness_pct: 100
      - service: light.turn_on
        entity_id:
          - light.theatre_room_ceiling
        data:
          brightness_pct: 1
      - service: light.turn_on
        entity_id:
          - light.theatre_room_tv_cabinet_led_strip
        data:
          color_temp: 250
          brightness_pct: 20

  #Finished with the theatre room  
  done_with_the_theatre_room:
    alias: Done With The Theatre Room
    sequence:
      - service: media_player.turn_off #turn on the TV
        entity_id:
          - media_player.theatre_room_tv 
      - service: script.turn_off_theatre_room_lights
      - service: switch.turn_off 
        entity_id:
          - switch.aircon_zone_theatre
      - condition: and #if all aircon only running in theatre, switch it off
        conditions:
          - condition: state
            entity_id: switch.aircon_zone_living
            state: 'off'
          - condition: state
            entity_id: switch.aircon_zone_master
            state: 'off'
          - condition: state
            entity_id: switch.aircon_zone_bed23
            state: 'off'
      - service: climate.turn_off 
        entity_id: climate.ac

  #Slowly fade in the lights after the movie has finished
  movie_has_finished:
    alias: Movie Has Finished
    sequence:
      - service: light.turn_on
        entity_id:
          - light.theatre_room_left_lamp
          - light.theatre_room_right_lamp
        data:
          rgb_color: [255,255,255]
          brightness_pct: 100
          transition: 60
      - delay: #wait for the lamps to finish
          seconds: 60
      - service: light.turn_on
        entity_id: light.theatre_room_ceiling
        data:
          brightness_pct: 1
      - service: light.turn_on
        entity_id: light.theatre_room_tv_cabinet_led_strip
        data:
          color_temp: 250
          brightness_pct: 20

automation:
  # - alias: Theatre Room Blinds - Close
  #   id: theatre_room_blinds_close
  #   trigger:
  #     - platform: sun
  #       event: sunset
  #     - platform: state
  #       entity_id: alarm_control_panel.alarm_com
  #       to: 'armed'
  #     - platform: state
  #       entity_id: media_player.theatre_room_tv
  #       from: 'off' #from off = turning on
  #   action:
  #     - service: cover.close_cover
  #       entity_id: cover.theatre_blinds
        
  # - alias: Theatre Room Blinds - Open Automatically
  #   id: theatre_room_blinds_open_automatically
  #   trigger:
  #     - platform: sun
  #       event: sunrise
  #     - platform: state
  #       entity_id: alarm_control_panel.alarm_com
  #       to: 'disarmed'
  #       from: 'armed_away'
  #     - platform: state
  #       entity_id: media_player.theatre_room_tv
  #       to: 'off'
  #   condition:
  #     condition: and #ONLY open if house is disarmed AND TV is off AND it's day time
  #     conditions:
  #       - condition: state 
  #         entity_id: sun.sun
  #         state: 'above_horizon' #day time
  #       - condition: state
  #         entity_id: alarm_control_panel.alarm_com
  #         state: 'disarmed'
  #       - condition: state
  #         entity_id: media_player.theatre_room_tv
  #         state: 'off'
  #   action:
  #     - service: cover.open_cover
  #       entity_id: cover.theatre_blinds

  - alias: Theatre Room Lights Manual Control - Change LED Strip Colour
    id: theatre_room_lights_manual_control_change_led_strip_colour
    trigger:
      - platform: event
        event_type: deconz_event
        event_data: 
          id: theatre_room_remote
          event: 4002 #left button
      - platform: event
        event_type: deconz_event
        event_data: 
          id: theatre_room_remote
          event: 5002 #right button
    condition:
      #Change colour if light is on, but don't turn it on if it's currently off
      - condition: state
        entity_id: 
          - light.theatre_room_tv_cabinet_led_strip
        state: 'on'
    action:
    #At the moment the colour will just be random, but it would be better to rotate through a sequence
    - service: light.turn_on
      data_template:
        entity_id: light.theatre_room_tv_cabinet_led_strip
        rgb_color: "{{ [[119,73,255],[0,255,255],[255,0,255]]|random }}" #purple, pink or teal
        brightness: 1

  - alias: Theatre Room Lights Manual Control - Movie Lights
    id: theatre_room_lights_manual_control_movie_lights
    trigger:
      - platform: event
        event_type: deconz_event
        event_data: 
          id: theatre_room_remote
          event: 3002 #bottom button
    action:
      - service: script.set_movie_lighting 

  - alias: Theatre Room Lights Manual Control - Movie Has Finished
    id: theatre_room_lights_manual_control_movie_has_finished
    trigger:
      - platform: event
        event_type: deconz_event
        event_data: 
          id: theatre_room_remote
          event: 2002 #top button
    action:
      - service: script.movie_has_finished

  - alias: Theatre Room Lights Manual Control - Toggle Lights
    id: theatre_room_lights_manual_control_toggle_lights
    trigger:
      - platform: event
        event_type: deconz_event
        event_data: 
          id: theatre_room_remote
          event: 1002 #centre button
    action:
      - service_template: >
          {% if is_state('light.theatre_room_ceiling', 'on') %}
            script.turn_off_theatre_room_lights
          {% else %} 
            script.turn_on_theatre_room_lights
          {% endif %} 
            
  - alias: Theatre Room Lights - Turn On Lights When Motion Detected
    id: theatre_room_lights_turn_on_lights_when_motion_detected
    trigger: 
      - platform: state
        entity_id: binary_sensor.theatre_motion
        to: 'on'
    condition:
      condition: and 
      conditions:
        - condition: state 
          entity_id: media_player.theatre_room_tv
          state: 'off' #not in the middle of watchin something
        - condition: state
          entity_id: light.theatre_room_ceiling
          state: 'off'
          for:
            minutes: 2 #the lights weren't just turned off
        - condition: state
          entity_id: light.theatre_room_left_lamp
          state: 'off'
          for:
            minutes: 2 #the lights weren't just turned off
        - condition: state
          entity_id: light.theatre_room_right_lamp
          state: 'off'
          for:
            minutes: 2 #the lights weren't just turned off
    action:
      - service: script.set_tv_dinner_lighting

  - alias: Theatre Room Lights - Turn Off Lamps After No Activity
    id: theatre_room_lights_turn_off_lamps_after_no_activity
    trigger:
      platform: time_pattern
      minutes: '/1' #run every minute
    condition:
      #If theatre room is inactive and at least one lamp is on, turn all the lights off
      - condition: state
        entity_id: 
          - light.theatre_room_ceiling
          - binary_sensor.theatre_motion
          - media_player.theatre_room_tv
        state: 'off'
        for:
          minutes: 20
      - condition: or
        conditions:
          - condition: state
            entity_id: 
              - light.theatre_room_left_lamp
            state: 'on'
            for:
              minutes: 10
          - condition: state
            entity_id: 
              - light.theatre_room_right_lamp
            state: 'on'
            for:
              minutes: 10
          - condition: state
            entity_id: 
              - light.theatre_room_tv_cabinet_led_strip
            state: 'on'
            for:
              minutes: 10
    action:
      - service: script.turn_off_theatre_room_lights

  - alias: Theatre Room - Play Plex Media On Cube Tap
    id: theatre_room_play_plex_media_on_cube_tap
    variables: 
      buttons:
        1001: #Marvel
          music_file: '/local/Marvel.mp3'
          plex_content_type: PLAYLIST
          plex_content_id: '{ "playlist_name": "The Falcon and the Winter Soldier", "shuffle": "0" }'
        2002: #Scrubs
          music_file: '/local/Scrubs.mp3'
          plex_content_type: PLAYLIST
          plex_content_id: '{ "playlist_name": "Scrubs", "shuffle": "0" }'
        3003: #Star Wars
          music_file: '/local/Star_Wars.mp3'
          plex_content_type: PLAYLIST
          plex_content_id: '{ "playlist_name": "Star Wars Rebels", "shuffle": "0" }'
        4004: #Attack on Titan
          music_file: '/local/Attack_On_Titan.mp3'
          plex_content_type: PLAYLIST
          plex_content_id: '{ "playlist_name": "Attack on Titan", "shuffle": "0" }'
        5005: #Last Week Tonight
          music_file: '/local/Last_Week_Tonight.mp3'
          plex_content_type: PLAYLIST
          plex_content_id: '{ "playlist_name": "Last Week Tonight", "shuffle": "0" }'
        6006: #Taskmaster
          music_file: '/local/Taskmaster.mp3'
          plex_content_type: PLAYLIST
          plex_content_id: '{ "playlist_name": "Taskmaster", "shuffle": "0" }'
    trigger: 
      - platform: event
        event_type: deconz_event
        event_data: 
          id: magic_cube
          gesture: 6 #double tap
    condition: 
      - "{{ trigger.event.data.event in buttons }}"
    action:
      - service: script.start_plex_media_playing
        data: 
          music_file: '{{ buttons[trigger.event.data.event].music_file }}'
          plex_content_type: '{{ buttons[trigger.event.data.event].plex_content_type }}'
          plex_content_id: '{{ buttons[trigger.event.data.event].plex_content_id }}'

############## LG TV ##############

# Turn on wake-on-lan support
wake_on_lan:

# LG TV
webostv:
    host: !secret theatre_room_tv_ip_address
    name: Theatre Room TV
    turn_on_action:
      service: wake_on_lan.send_magic_packet
      data:
        mac: "A8:23:FE:E4:84:05"
    customize:
      sources:
        - 'ABC iview'
        - 'Amazon Prime Video'
        - Chromecast
        - 'Live TV'
        - Netflix
        - Plex
        - Stan
        - YouTube

############## LG TV ##############
