wake_on_lan: # enables `wake_on_lan` integration

script:
  #Trigger the Hue lights scene for movie watching
  set_movie_lighting:
    alias: Movie Lighting Scene
    sequence:
    - service: script.turn_off_all_lights 
      data: 
          #exclude the theatre room lamps & associated Hue groups from turning off
          excluded_lights: "['light.theatre_room', 'light.theatre_room_2', 'light.theatre_room_left_lamp', 'light.theatre_room_right_lamp', 'light.theatre_room_tv_cabinet_led_strip']"
    - service: hue.hue_activate_scene
      data: 
        group_name: "Theatre Room"
        scene_name: "Movie Watching"
    - service: light.turn_on
      target: 
        entity_id: light.theatre_room_tv_cabinet_led_strip
      data:
        hs_color: >-
            {{ [(range(0, 360) | random),100] }}

  set_dim_theatre_lighting:
    alias: Dim Theathre Lighting Scene
    sequence:
    - service: hue.hue_activate_scene
      data: 
        group_name: "Theatre Room"
        scene_name: "Movie Watching"
    - service: light.turn_off
      data:
        entity_id: light.entry_hall_lights
    - service: light.turn_on
      target: 
        entity_id: light.theatre_room_tv_cabinet_led_strip
      data:
        hs_color: >-
            {{ [(range(0, 360) | random),100] }}

  #Trigger the Hue lights scene for movie watching
  set_tv_dinner_lighting:
    sequence:
    - service: hue.hue_activate_scene
      data: 
        group_name: "Theatre Room"
        scene_name: "Movie Watching" 
    - service: light.turn_off
      data:
        entity_id: light.entry_hall_lights
    - service: light.turn_on
      data: 
        entity_id: light.theatre_room_ceiling
    alias: TV Dinner Lighting Scene

  #Trigger the Hue lights scene for party lights
  set_theatre_party_lighting:
    sequence:
    - service: hue.hue_activate_scene
      data: 
        group_name: "Theatre Room"
        scene_name: "Party Lights"
    alias: Theatre Party Lights Scene

  #Get the theatre room ready  
  time_for_a_movie:
    alias: Time For A Movie
    sequence:
      - service: cover.close_cover #this would be triggered anyway, but this call makes it occur faster
        entity_id: cover.theatre_blinds 
      - service: script.turn_on #set the lighting
        entity_id:
          - script.set_movie_lighting 
      - service: media_player.turn_on #turn on the TV
        entity_id:
          - media_player.theatre_room_tv 
      - wait_template: "{{ is_state('media_player.theatre_room_tv', 'on') }}"
      - service: media_player.select_source #switch TV to Plex
        data:
          entity_id: media_player.theatre_room_tv
          source: "Plex"
      - condition: or #all further steps will only run if this condition is true
        conditions:
          - condition: template
            value_template: '{{ (states.sensor.theatre_temperature.state | float) > 26.0 }}' #if theatre room temperature is > 26 degrees
      - service: script.turn_on #cool the theatre room
        entity_id:
          - script.aircon_fan_theatre

  #Get the theatre room ready  
  time_for_a_tv_dinner:
    alias: Time For A TV Dinner
    sequence:
      - service: cover.close_cover #this would be triggered anyway, but this call makes it occur faster
        entity_id: cover.theatre_blinds 
      - service: script.turn_on #set the lighting
        entity_id:
          - script.set_tv_dinner_lighting 
      - service: media_player.turn_on #turn on the TV
        entity_id:
          - media_player.theatre_room_tv 
      - wait_template: "{{ is_state('media_player.theatre_room_tv', 'on') }}"
      - service: media_player.select_source #switch TV to Plex
        data:
          entity_id: media_player.theatre_room_tv
          source: "Plex"
      - condition: or #all further steps will only run if this condition is true
        conditions:
          - condition: template
            value_template: '{{ (states.sensor.theatre_temperature.state | float) > 26.0 }}' #if theatre room temperature is > 26 degrees
      - service: script.turn_on #cool the theatre room
        entity_id:
          - script.aircon_cool_theatre

  start_netflix_media_playing:
    alias: Start Netflix Media Playing
    mode: restart
    fields:
      netflix_show_name:
        description: 'The name of the show in Netflix'
        example: 'Snowpiercer'
    sequence:
      - service: media_player.turn_on #turn on the TV
        entity_id: media_player.theatre_room_tv 
      - delay:
          seconds: 5
      - wait_template: "{{ is_state('media_player.theatre_room_tv', 'on') }}"
        timeout: '00:00:20'
      - wait_template: "{{ is_state('media_player.theatre_room_google_home', 'idle') }}"
        timeout: '00:00:20'
      - service: tts.cloud_say
        data:
          entity_id: media_player.theatre_room_chromecast
          message: "Hey Google, play Netflix {{netflix_show_name}} in the Theatre Room"

  #Start a media file from Plex playing on the theatre room TV
  start_plex_media_playing:
    alias: Start Plex Media Playing
    mode: restart
    fields: 
      plex_content_type: 
        description: 'The type of Plex content to be played'
        example: 'PLAYLIST'
      plex_content_id:
        description: 'The Plex content ID to play on the TV'
        example: '{ "playlist_name": "Star Wars - The Mandalorian", "shuffle": "0" }'
    sequence:
      - service: cover.close_cover #this would be triggered anyway, but this call makes it occur faster
        entity_id: cover.theatre_blinds 
      - service: script.turn_on #set the lighting
        entity_id:
          - script.set_tv_dinner_lighting 
      - service: media_player.turn_on #turn on the TV
        entity_id: media_player.theatre_room_tv 
      - wait_template: "{{ is_state('media_player.theatre_room_tv', 'on') }}"
        timeout: '00:00:20'
      - service: media_player.select_source #switch TV to Plex
        data:
          entity_id: media_player.theatre_room_tv
          source: "Plex"
      - repeat:
          sequence:
            - service: plex.scan_for_clients #Force a refresh of the Plex LG media player
            - delay:
                seconds: 2
          until:
            - condition: template
              value_template: "{{ not is_state('media_player.plex_for_lg', 'unavailable') }}"
      - repeat:
          sequence:
            - service: media_player.play_media #Keep trying to play media until it starts
              data:
                entity_id: media_player.plex_for_lg
                media_content_type: '{{ plex_content_type }}'
                media_content_id: '{{ plex_content_id }}'
            - delay:
                seconds: 10
          until:
            - condition: template
              value_template: "{{ is_state('media_player.plex_for_lg', 'playing') }}"
      - condition: or #all further steps will only run if this condition is true
        conditions:
          - condition: template
            value_template: '{{ (states.sensor.theatre_temperature.state | float) > 26.0 }}' #if theatre room temperature is > 26 degrees
      - service: script.turn_on #cool the theatre room
        entity_id:
          - script.aircon_cool_theatre

  turn_off_theatre_room_lights:
    alias: Turn Off Theatre Room Lights
    sequence:
      - service: light.turn_off
        entity_id:
          - light.theatre_room_left_lamp
          - light.theatre_room_right_lamp
          - light.theatre_room_ceiling
      #turn on feet-level lighting to allow people to leave the room
      - service: light.turn_on
        data:
          entity_id: light.theatre_room_tv_cabinet_led_strip
          color_temp: 250
          brightness: 1
      - delay: 
          seconds: 10
      - service: light.turn_off
        entity_id: light.theatre_room_tv_cabinet_led_strip

  turn_on_theatre_room_lights:
    alias: Turn On Theatre Room Lights
    sequence:
      - service: light.turn_on
        entity_id:
          - light.theatre_room_left_lamp
          - light.theatre_room_right_lamp
        data:
          rgb_color: [255,255,255]
          brightness_pct: 100
      - service: light.turn_on
        entity_id:
          - light.theatre_room_ceiling
        data:
          brightness_pct: 1
      - service: light.turn_on
        entity_id:
          - light.theatre_room_tv_cabinet_led_strip
        data:
          color_temp: 250
          brightness_pct: 1

  #Finished with the theatre room  
  done_with_the_theatre_room:
    alias: Done With The Theatre Room
    sequence:
      - service: media_player.turn_off #turn on the TV
        entity_id:
          - media_player.theatre_room_tv 
      - service: script.turn_off_theatre_room_lights
      - service: switch.turn_off 
        entity_id:
          - switch.aircon_zone_theatre
      - condition: and #if all aircon only running in theatre, switch it off
        conditions:
          - condition: state
            entity_id: switch.aircon_zone_living
            state: 'off'
          - condition: state
            entity_id: switch.aircon_zone_master
            state: 'off'
          - condition: state
            entity_id: switch.aircon_zone_bed23
            state: 'off'
      - service: climate.turn_off 
        entity_id: climate.ac

  #Slowly fade in the lights after the movie has finished
  movie_has_finished:
    alias: Movie Has Finished
    sequence:
      - service: light.turn_on
        entity_id:
          - light.theatre_room_left_lamp
          - light.theatre_room_right_lamp
        data:
          color_temp: 350
          brightness_pct: 75
          transition: 60
      - delay: #wait for the lamps to finish
          seconds: 60
      - service: light.turn_on
        entity_id: light.theatre_room_tv_cabinet_led_strip
        data:
          color_temp: 350
          brightness_pct: 1

automation:
  - alias: Theatre Room - Turn On TV Smart Switch When It Turns Itself Off
    id: theatre_room_turn_on_tv_smart_switch_when_it_turns_itself_off
    mode: queued
    max: 3
    trigger:
      - platform: state
        entity_id: switch.theatre_room_tv_smart_plug
        to: 'off'
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.theatre_room_tv_smart_plug
      - delay:
          minutes: 5

  - alias: Theatre Room - Turn On Theatre Room TV with WakeOnLan
    trigger:
      - platform: webostv.turn_on
        entity_id: media_player.theatre_room_tv
    action:
      - service: wake_on_lan.send_magic_packet
        data:
          mac: "A8:23:FE:E4:84:05"

  - alias: Theatre Room Lights Manual Control - Change LED Strip Colour
    id: theatre_room_lights_manual_control_change_led_strip_colour
    trigger:
      - platform: event
        event_type: zha_event
        event_data: 
          device_ieee: !secret zha_theatre_room_lights_remote
          command: "press" #both side buttons
    action:
    - service: light.turn_on
      data_template:
        entity_id: light.theatre_room_tv_cabinet_led_strip
        rgb_color: "{{ [[119,73,255],[0,255,255],[255,0,255]]|random }}" #purple, pink or teal

  - alias: Theatre Room Lights Manual Control - Movie Lights
    id: theatre_room_lights_manual_control_movie_lights
    trigger:
      - platform: event
        event_type: zha_event
        event_data: 
          device_ieee: !secret zha_theatre_room_lights_remote
          command: "step" #bottom button
    action:
      - service: script.set_movie_lighting 

  - alias: Theatre Room Lights Manual Control - Movie Has Finished
    id: theatre_room_lights_manual_control_movie_has_finished
    trigger:
      - platform: event
        event_type: zha_event
        event_data: 
          device_ieee: !secret zha_theatre_room_lights_remote
          command: "step_with_on_off" #top button
    action:
      - service: script.movie_has_finished

  - alias: Theatre Room Lights Manual Control - Toggle Lights
    id: theatre_room_lights_manual_control_toggle_lights
    trigger:
      - platform: event
        event_type: zha_event
        event_data: 
          device_ieee: !secret zha_theatre_room_lights_remote
          command: "toggle" #center button
    action:
      - service: >
          {% if is_state('light.theatre_room_ceiling', 'on') %}
            script.turn_off_theatre_room_lights
          {% else %} 
            script.turn_on_theatre_room_lights
          {% endif %} 
            
  - alias: Theatre Room Lights - Turn On Lights When Motion Detected
    id: theatre_room_lights_turn_on_lights_when_motion_detected
    trigger: 
      - platform: state
        entity_id: binary_sensor.theatre_room_motion
        to: 'on'
    condition:
      condition: and 
      conditions:
        - condition: state 
          entity_id: media_player.theatre_room_tv
          state: 'off' #not in the middle of watchin something
        - condition: state
          entity_id: light.theatre_room_ceiling
          state: 'off'
          for:
            minutes: 2 #the lights weren't just turned off
        - condition: state
          entity_id: light.theatre_room_left_lamp
          state: 'off'
          for:
            minutes: 2 #the lights weren't just turned off
        - condition: state
          entity_id: light.theatre_room_right_lamp
          state: 'off'
          for:
            minutes: 2 #the lights weren't just turned off
    action:
      - choose:
          # During meal times, set brighter lighting
          - conditions:
              - condition: template
                value_template: >-
                  {{ 
                    ( now().hour >= 13 and now().hour <= 14 )
                    or
                    ( now().hour >= 18 and now().hour <= 19 )
                  }}
            sequence:
              - service: script.set_tv_dinner_lighting
        # At other times, make the lighting dimmed
        default:
          - service: script.set_dim_theatre_lighting

  - alias: Theatre Room Lights - Turn Off Lamps After No Activity
    id: theatre_room_lights_turn_off_lamps_after_no_activity
    trigger:
      - platform: state
        entity_id: binary_sensor.theatre_room_occupancy
        to: 'off'
        for:
          minutes: 10
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: light.theatre_room_left_lamp
            state: 'on'
          - condition: state
            entity_id: light.theatre_room_right_lamp
            state: 'on'
    action:
      - service: script.done_with_the_theatre_room

  - alias: Theatre Room - Play TV Show On Cube Tap
    id: theatre_room_play_tv_show_on_cube_tap
    variables: 
      buttons:
        1: #The Last Of Us
          music_file: '/local/sounds/The_Last_Of_Us.mp3'
          media_location: "PLEX"
          plex_content_id: '{ "playlist_name": "The Last Of Us", "shuffle": "0" }'
        2: #Marvel
          music_file: '/local/sounds/Marvel.mp3'
          media_location: "PLEX"
          plex_content_id: '{ "playlist_name": "Marvel", "shuffle": "0" }'
        3: #Taskmaster
          music_file: '/local/sounds/Taskmaster.mp3'
          media_location: "PLEX"
          plex_content_id: '{ "playlist_name": "Taskmaster", "shuffle": "0" }'
        4: #Battlebots 
          music_file: '/local/sounds/Battlebots.mp3'
          media_location: "PLEX"
          plex_content_id: '{ "playlist_name": "Battlebots", "shuffle": "0" }'
        5: #Star Wars
          music_file: '/local/sounds/Star_Wars.mp3'
          media_location: "PLEX"
          plex_content_id: '{ "playlist_name": "Star Wars", "shuffle": "0" }'
        6: #Snowpiercer
          music_file: '/local/sounds/Snowpiercer.mp3'
          media_location: "NETFLIX"
          netflix_show_name: "Snowpiercer"
    trigger: 
      - platform: event
        event_type: zha_event
        event_data: 
          device_ieee: !secret zha_theatre_room_magic_cube
          command: "knock"
    condition: 
      - "{{ trigger.event.data.args.activated_face in buttons }}"
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.theatre_room_google_home
          media_content_id: '{{ buttons[trigger.event.data.args.activated_face].music_file }}'
          media_content_type: 'audio/mp3'

      - choose:
          # IF PLEX
          - conditions:
              - condition: template
                value_template: "{{ buttons[trigger.event.data.args.activated_face].media_location == 'PLEX' }}"
            sequence:
              - service: script.start_plex_media_playing
                data: 
                  plex_content_type: 'PLAYLIST'
                  plex_content_id: '{{ buttons[trigger.event.data.args.activated_face].plex_content_id }}'
          # IF NETFLIX
          - conditions:
              - condition: template
                value_template: "{{ buttons[trigger.event.data.args.activated_face].media_location == 'NETFLIX' }}"
            sequence:
              - service: script.start_netflix_media_playing
                data: 
                  netflix_show_name: '{{ buttons[trigger.event.data.args.activated_face].netflix_show_name }}'

  - alias: Theatre Room - Restart LED Strip When Unavailable
    id: theatre_room_restart_led_strip_when_unavailable
    trigger:
      - platform: time_pattern
        minutes: '/10' #run every 10 minutes
    condition:
      - condition: state
        entity_id: light.theatre_room_tv_cabinet_led_strip
        state: "unavailable"
        for:
          minutes: 10
    action:
      - service: switch.turn_off
        entity_id: switch.theatre_led_strip_smart_plug
      - delay: 
          seconds: 10
      - service: switch.turn_on
        entity_id: switch.theatre_led_strip_smart_plug

  - alias: Theatre Room - Fade Lights Back In When Plex Finished
    id: theatre_room_fade_lights_back_in_when_plex_finished
    trigger:
      - platform: state
        entity_id: media_player.plex_plex_for_lg_lg_75uk6500ptb
        from: "play"
        to: "idle"
        for:
          minutes: 1
      - platform: state
        entity_id: media_player.plex_plex_for_lg_lg_75uk6500ptb
        from: "paused"
        to: "idle"
        for:
          minutes: 1
    condition:
      - condition: numeric_state
        entity_id: light.theatre_room_left_lamp
        attribute: brightness
        below: 20
      - condition: numeric_state
        entity_id: light.theatre_room_right_lamp
        attribute: brightness
        below: 20
    action:
      - service: script.movie_has_finished