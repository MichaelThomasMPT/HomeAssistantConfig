script:
  turn_off_all_lights:
    icon: 'mdi:lightbulb-group-off'
    description: 'Turn off all the lights in the house, optionally excluding a set of lights in the process (excluded lights will remain in their current state).'
    fields:
      excluded_lights:
        description: 'A comma-separated list of lights to exclude from turning off (ie. leave in their current state), or blank to turn off all lights'
        example: "['light.garage_light', 'light.front_porch_light'] or []"
    sequence:
      - service: light.turn_off
        data_template: 
          entity_id: "{{ states.light | rejectattr('entity_id','in', excluded_lights) | map(attribute='entity_id') | list | join(', ') }}"
      - delay:
          seconds: 5  #in case any lights didn't turn off fully (eg. those on a double switch), try again
      - service: light.turn_off
        data_template: 
          entity_id: "{{ states.light | rejectattr('entity_id','in', excluded_lights) | map(attribute='entity_id') | list | join(', ') }}"

  turn_off_whole_house:
    icon: 'mdi:home-minus-outline'
    description: 'Turn off everything in the house, optionally excluding a set of lights in the process (excluded lights will remain in their current state).'
    fields:
      excluded_lights:
        description: 'A comma-separated list of lights to exclude from turning off (ie. leave in their current state), or blank to turn off all lights'
        example: "['light.garage_light', 'light.front_porch_light'] or []"
      turn_off_aircon:
        description: 'Leave the aircon on or turn it off (boolean)'
        example: true
    sequence:
      - service: script.turn_off_all_lights
        data:
          excluded_lights: "{{ excluded_lights }}"
      - service: media_player.turn_off #tv & speakers
        entity_id: all
      - service: switch.turn_off
        entity_id: switch.living_room_tv_smart_plug
      - service: cover.close_cover
        entity_id: cover.theatre_blinds
      # only proceed if requesting to turn off the aircon
      - condition: template
        value_template: "{{ turn_off_aircon }}" 
      - service: script.aircon_turn_off_all_zones
      - service: climate.turn_off
        entity_id: climate.ac

  set_party_lights:
    alias: "Whole House - Set Party Lights"
    description: "Sets all of the lights in the house to low for hosting parties."
    icon: mdi:party-popper
    sequence:
      - service: light.turn_on
        entity_id: light.alfresco_fairy_lights
      - service: light.turn_on
        entity_id: 
          - light.kitchen_island
          - light.living_room
          - light.dining_room
        data:
          brightness_pct: 2
      - service: light.turn_on
        entity_id:
          - light.entry_hall_lights
        data:
          brightness_pct: 7
      - service: light.turn_on
        entity_id: 
          - light.scullery_light
          - light.pantry_light
          - light.side_hall
        data:
          brightness_pct: 15
      - service: hue.hue_activate_scene
        data: 
          group_name: "Theatre Room"
          scene_name: "Party Lights"
      - delay: 3
      - service: light.turn_off
        entity_id:
          - light.kitchen_ceiling_light
          - light.scullery_light
          - light.pantry_light
          - light.side_hall
      #Finally, once all the lights have been set, toggle the automation to reset them the next morning, and activate guest mode in case people are staying over
      - service: automation.turn_on
        entity_id: automation.whole_house_reset_party_lights
      - service: input_boolean.turn_on
        entity_id: input_boolean.guest_mode

  reset_party_lights:
    alias: "Whole House - Reset Party Lights"
    description: "Resets all of the lights to maximum brightness after a party."
    icon: mdi:restore
    sequence:
      - service: light.turn_on
        entity_id:
          - light.kitchen_island
          - light.living_room
          - light.dining_room
          - light.entry_hall_lights
          - light.scullery_light
          - light.pantry_light
          - light.side_hall
          - light.theatre_room
        data:
          brightness_pct: 100
      - delay: 3
      - service: light.turn_off
        entity_id:
          - light.kitchen_island
          - light.living_room
          - light.dining_room
          - light.entry_hall_lights
          - light.scullery_light
          - light.pantry_light
          - light.side_hall
          - light.theatre_room
      #No need to run the automation again after this script has been run
      - service: automation.turn_off
        entity_id: automation.whole_house_reset_party_lights

automation:
  - alias: "Whole House - Reset Party Lights"
    id: whole_house_reset_party_lights
    description: "Automatically triggers reset of party lights the day after the party."
    trigger:
      - platform: sun
        event: sunrise
        offset: "+03:00:00" #should be enough time for any stragglers to wake up! 
    action:
      - service: script.reset_party_lights