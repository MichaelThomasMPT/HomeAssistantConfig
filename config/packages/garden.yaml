light:
  - platform: template
    lights:
      alfresco_fairy_lights:
        icon_template: mdi:string-lights
        friendly_name: "Alfresco Fairy Lights"
        value_template: "{{ states('switch.alfresco_fairy_lights_socket_a') == 'on' or states('switch.alfresco_fairy_lights_socket_b') == 'on'}}"
        turn_on:
          service: switch.turn_on
          entity_id:
            - switch.alfresco_fairy_lights_socket_a
            - switch.alfresco_fairy_lights_socket_b
        turn_off:
          service: switch.turn_off
          entity_id:
            - switch.alfresco_fairy_lights_socket_a
            - switch.alfresco_fairy_lights_socket_b

automation:
  - alias: Garden - Turn On Outdoor Lights When Both Back Doors Are Opened
    trigger: 
      - platform: state
        entity_id: 
          - binary_sensor.back_door_glass
          - binary_sensor.back_door_flyscreen
        to: 'on' #open
    condition:
      condition: and
      conditions:
        - condition: state  # from sunset until sunrise
          entity_id: sun.sun
          state: 'below_horizon'
        - condition: state
          entity_id: 'binary_sensor.back_door_glass'
          state: 'on' #open
        - condition: state
          entity_id: 'binary_sensor.back_door_flyscreen'
          state: 'on' #open
    action:
      - service: light.turn_on
        entity_id: light.alfresco_fairy_lights
        data:
          brightness_pct: 100

 #if garden lights left on during the day, turn them off.
  - alias: Garden - Turn Off Outdoor Lights If Left On During The Day
    mode: single
    trigger:
      platform: time_pattern
      minutes: '/5' #run every 5 minutes
    condition: #during the day and either light is on
      condition: and
      conditions:
        - condition: state 
          entity_id: sun.sun
          state: 'above_horizon'
        - condition: or
          conditions:
            - condition: state
              entity_id: light.garden_flood_lights
              state: 'on'
              for:
                minutes: 5
            - condition: state
              entity_id:  light.alfresco_ceiling_lights
              state: 'on'
              for:
                minutes: 5
            - condition: state
              entity_id:  light.alfresco_fairy_lights
              state: 'on'
              for:
                minutes: 5
    action:
      - service: light.turn_off
        entity_id: light.alfresco_fairy_lights
      - service: light.turn_off
        entity_id: light.alfresco_ceiling_lights
      - delay: 
          seconds: 10 #Since the alfresco ceiling lights and garden flood lights share the same switch, the light.turn_off requests need to be sent separately with a slight delay
      - service: light.turn_off
        entity_id: light.garden_flood_lights
      - delay:
          minutes: 30 #Don't run the automation again for another half hour, in case there is a legitimate reason for the lights to be on

  #In case I've manually disabled the garden lights switch-off automation, re-enable it when the sun sets for the day
  - alias: Garden - Reactivate Garden Lights Switch-Off Automation Each Day
    trigger:
      platform: sun
      event: sunset
    action:
      service: automation.turn_on
      entity_id: automation.garden_turn_off_outdoor_lights_if_left_on_during_the_day