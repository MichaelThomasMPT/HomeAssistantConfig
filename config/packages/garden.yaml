light:
  - platform: switch
    name: Alfresco Fairy Lights
    entity_id: switch.alfresco_fairy_lights_smart_plug

template:
  select:
    - name: "Alfresco Temperature"
      unique_id: alfresco_temperature
      state: "{% if states('select.alfresco_heater_temperature_level') == '2' %}high{% else %}low{% endif %}"
      options: "{{ ['high', 'low'] }}"
      select_option:
        - service: select.select_option
          data:
            option: "{% if option == 'high' %}2{% else %}1{% endif %}"
          target:
            entity_id: select.alfresco_heater_temperature_level

switch:
  - platform: template
    switches:
      alfresco_heater:
        friendly_name: Alfresco Heater
        value_template: "{{ is_state('climate.alfresco_heater', 'heat') }}"
        turn_on:
          service: climate.turn_on
          target:
            entity_id: climate.alfresco_heater
        turn_off:
          service: climate.turn_off
          target:
            entity_id: climate.alfresco_heater
        icon_template: mdi:patio-heater

automation:
  - alias: Garden - Turn On Washing Line Lights When Motion Detected
    id: garden_turn_on_washing_line_lights_when_motion_detected
    mode: restart #this ensures that it will continue to stay on if there is still motion
    trigger: 
      - platform: state
        entity_id: binary_sensor.back_path_motion
        to: 'on'
    condition:
      - condition: state  # from sunset until sunrise
        entity_id: sun.sun
        state: 'below_horizon'
    action:
      - service: light.turn_on
        entity_id: light.washing_line_lights
        data:
          brightness_pct: 100
      - wait_template: "{{ is_state('binary_sensor.back_path_motion', 'off') }}"
        timeout: "00:05:00"
      - service: light.turn_off
        entity_id: light.washing_line_lights

  - alias: Garden - Turn On Outdoor Lights When Both Back Doors Are Opened
    id: garden_turn_on_outdoor_lights_when_both_back_doors_are_opened
    trigger: 
      - platform: state
        entity_id: 
          - binary_sensor.back_door_glass
          - binary_sensor.back_door_flyscreen
        to: 'on' #open
    condition:
      condition: and
      conditions:
        - condition: state  # from sunset until sunrise
          entity_id: sun.sun
          state: 'below_horizon'
        - condition: state
          entity_id: 'binary_sensor.back_door_glass'
          state: 'on' #open
        - condition: state
          entity_id: 'binary_sensor.back_door_flyscreen'
          state: 'on' #open
        - condition: state
          entity_id: 'light.alfresco_ceiling_lights' #Don't turn on the fairy lights if the ceiling lights are already on; don't need both active! 
          state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.alfresco_fairy_lights
        data:
          brightness_pct: 100

  #if garden lights left on during the day, turn them off.
  - alias: Garden - Turn Off Outdoor Lights If Left On During The Day
    id: garden_turn_off_outdoor_lights_if_left_on_during_the_day
    mode: single
    trigger:
      platform: time_pattern
      minutes: '/5' #run every 5 minutes
    condition: #during the day and either light is on
      condition: and
      conditions:
        - condition: state 
          entity_id: sun.sun
          state: 'above_horizon'
        - condition: or
          conditions:
            - condition: state
              entity_id: light.garden_flood_lights
              state: 'on'
              for:
                minutes: 5
            - condition: state
              entity_id:  light.alfresco_ceiling_lights
              state: 'on'
              for:
                minutes: 5
            - condition: state
              entity_id:  light.alfresco_fairy_lights
              state: 'on'
              for:
                minutes: 5
    action:
      - service: light.turn_off
        entity_id: light.alfresco_fairy_lights
      - service: light.turn_off
        entity_id: light.alfresco_ceiling_lights
      - delay: 
          seconds: 10 #Since the alfresco ceiling lights and garden flood lights share the same switch, the light.turn_off requests need to be sent separately with a slight delay
      - service: light.turn_off
        entity_id: light.garden_flood_lights
      - delay:
          minutes: 30 #Don't run the automation again for another half hour, in case there is a legitimate reason for the lights to be on

  #In case I've manually disabled the garden lights switch-off automation, re-enable it when the sun sets for the day
  - alias: Garden - Reactivate Garden Lights Switch-Off Automation Each Day
    id: garden_reactivate_garden_lights_switch_off_automation_each_day
    trigger:
      platform: sun
      event: sunset
    action:
      service: automation.turn_on
      entity_id: automation.garden_turn_off_outdoor_lights_if_left_on_during_the_day

  - alias: Garden - Turn Off Alfresco Fairy Lights If Ceiling Lights Turned On
    id: garden_turn_off_alfresco_fairy_lights_if_ceiling_lights_turned_on
    trigger:
      - platform: state
        entity_id: light.alfresco_ceiling_lights
        to: 'on'
    action:
      service: light.turn_off
      entity_id: light.alfresco_fairy_lights

  - alias: Garden - Turn Off Alfresco Ceiling Lights If Fairy Lights Turned On
    id: garden_turn_off_alfresco_ceiling_lights_if_fairy_lights_turned_on
    trigger:
      - platform: state
        entity_id: light.alfresco_fairy_lights
        to: 'on'
    action:
      service: light.turn_off
      entity_id: light.alfresco_ceiling_lights

  - alias: Garden - Toggle Alfresco Fairy Lights With Switch
    id: garden_toggle_alfresco_fairy_lights_with_switch
    variables: 
      #map the on/off buttons to the appropriate service
      buttons: 
        "on":
          service_to_call: light.turn_on
        "off":
          service_to_call: light.turn_off
    trigger: 
      - platform: event
        event_type: zha_event
        event_data: 
          device_ieee: !secret zha_alfresco_fairy_lights_switch
    condition: 
      - "{{ trigger.event.data.command in buttons }}"
    action:
      - service: "{{ buttons[trigger.event.data.command].service_to_call }}"
        entity_id: light.alfresco_fairy_lights

  - alias: Garden - Turn On Flood Lights If Motion Detected After Dark
    id: garden_turn_on_flood_lights_if_motion_detected_after_dark
    trigger:
      - platform: state
        entity_id: binary_sensor.backyard_motion
        from: 'off'
        to: 'on'
    condition:
      - condition: state #from sunset until sunrise
        entity_id: sun.sun
        state: "below_horizon"
    action:
      - service: light.turn_on
        target:
          entity_id: light.garden_flood_lights
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.backyard_motion
          from: 'on'
          to: 'off'
      - service: light.turn_off
        target:
          entity_id: light.garden_flood_lights

  - alias: Garden - Turn Off Alfresco Heater After Four Hours 
    id: garden_turn_off_alfresco_heater_after_four_hours
    trigger:
      - platform: state
        entity_id: climate.alfresco_heater
        to: 'heat'
        for: 
          hours: 4
    action:
      - service: climate.turn_off
        target:
          entity_id: climate.alfresco_heater
      - service: script.chatgpt_reword_message
        data:
          prompt: "The patio heater was left on for 4 hours, so I switched it off"
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: "{{ chatgpt_response.text }}"
          title: Patio Heater Switched Off
          data:
            group: Patio heater
            actions:
              - action: "turn_alfresco_heater_on" 
                title: "Hey, I was still using that!"
      - alias: "Check if TV is on before notifying it"
        condition: state
        entity_id: media_player.theatre_room_tv
        state: "on"
      - service: notify.theatre_room_tv
        data:
          message: "{{ chatgpt_response.text }}"

  - alias: Garden - Notify Michael If Alfresco Heater On For Two Hours 
    id: garden_notify_micahel_if_alfresco_heater_on_for_two_hours
    trigger:
      - platform: state
        entity_id: climate.alfresco_heater
        to: 'heat'
        for: 
          hours: 2
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: "The patio heater has been on for 2 hours. Should it be?"
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: "{{ chatgpt_response.text }}"
          title: Patio Heater Is On
          data:
            group: Patio heater
            actions:
              - action: "turn_alfresco_heater_off" 
                title: "Nah, turn it off"
      - alias: "Check if TV is on before notifying it"
        condition: state
        entity_id: media_player.theatre_room_tv
        state: "on"
      - service: notify.theatre_room_tv
        data:
          message: "{{ chatgpt_response.text }}"

  - alias: Garden - Turn Off Alfresco Heater On Notification Action
    id: garden_turn_off_alfresco_heater_on_notifcation_action
    trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: turn_alfresco_heater_off
    action:
      - service: climate.turn_off
        data:
          entity_id: climate.alfresco_heater
          
  - alias: Garden - Turn On Alfresco Heater On Notification Action
    id: garden_turn_on_alfresco_heater_on_notifcation_action
    trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: turn_alfresco_heater_on
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.alfresco_heater