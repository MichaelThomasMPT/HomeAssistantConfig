# Check for breaking changes in new HA configuration
breaking_changes:
  scan_interval: 600 #10 minutes

# Check for new versions of Home Assistant in DockerHub & GitHub
sensor:
  - platform: version
    source: docker
    name: ha_docker_version_stable

  - platform: version
    beta: true
    source: docker
    name: ha_docker_version_beta

  - platform: version
    name: ha_version
    source: local

  - platform: rest
    name: ha_github_version
    resource: 'https://api.github.com/repos/home-assistant/home-assistant/releases/latest'
    headers:
      accept: application/vnd.github.v3+json
      content-type: application/json
      user-agent: home-assistant/rest-sensor
    value_template: >-
      {{ value_json.tag_name }}
    scan_interval: 1800

homeassistant:
  customize:
    sensor.ha_docker_version_stable:
      icon: mdi:docker
      friendly_name: Latest Docker
    sensor.ha_docker_version_beta:
      icon: mdi:docker
      friendly_name: Beta Docker
    sensor.ha_github_version:
      icon: mdi:github-circle
      friendly_name: Latest Github
    sensor.ha_version:
      icon: mdi:home-assistant
      friendly_name: Running Version


automation:
  - alias: "Version Update - Notify Docker Update and Trigger Github Action"
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: sensor.ha_docker_version_stable
    condition:
      - condition: template
        value_template: '{{ trigger.to_state.state > trigger.from_state.state }}'
    action:
      - service: shell_command.github_action_trigger
        data_template:
          # Make sure your api token has "repo" access
          github_token: !secret github_token
          # Options are: dev, rc, stable
          branch: stable
          # If release is "minor" we auto-apply the update
          release_type: '{% if states.sensor.ha_version.state[:-2] == states.sensor.ha_docker_version_stable.state[:-2] %}minor{% else %}major{% endif %}'
          version: '{{ states.sensor.ha_docker_version_stable.state }}'
      # # Delay to allow action to finish
      # - delay:
      #     minutes: 45
      # - service: notify.pushbullet
      #   data_template:
      #     message: >-
      #       New Version Auto-Apply Timed Out: {{ trigger.from_state.state }} --> {{ trigger.to_state.state }} Changes: https://git.io/JvkT4 Tested: https://git.io/Jvt3w

  - alias: "Version Update - Github Action Docker Beta"
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: sensor.ha_docker_version_beta
    condition:
      - condition: template
        value_template: '{{ trigger.to_state.state > trigger.from_state.state }}'
    action:
      - service: shell_command.github_action_trigger
        data:
          github_token: !secret github_token
          branch: rc
          release_type: None
          version: '{{ states.sensor.ha_docker_version_stable.state }}'

  # Triggered from Github action. We only auto-apply minor releases.
  - alias: "Version Update - Upgrade HASS From Github Action Webhook"
    initial_state: 'on'
    trigger:
      platform: webhook
      webhook_id: !secret hass_upgrade_webhook
    action:
      - service: notify.pushbullet
        data_template:
          message: >-
            New Version Ready To Be Applied: {{ states.sensor.ha_docker_version_stable.state }} Changes: https://git.io/JvkT4 Tested: https://git.io/Jvt3w 
      # Disabling the auto-updates for now, but still notifying when an update is ready
      # - service: shell_command.upgrade_hass
      #   data:
      #     key_location: !secret haversionupdate_ssh_key_location
      #     connection_string: !secret haversionupdate_ssh_connection_string
      #     docker_compose_location: !secret haversionupdate_docker_compose_location

shell_command:
  github_action_trigger: "curl -v -X POST -u 'MichaelThomasMPT:{{ github_token }}' -H 'Accept: application/vnd.github.everest-preview+json' -H 'Content-Type: application/json' --data '{\"event_type\":\"build\", \"client_payload\":{\"branch\":\"{{ branch }}\",\"release_type\":\"{{ release_type }}\",\"version\":\"{{ version }}\"}}' https://api.github.com/repos/MichaelThomasMPT/HomeAssistantConfig/dispatches"
  upgrade_hass: ssh -oStrictHostKeyChecking=no -i {{ key_location }} -t {{ connection_string }} 'docker-compose -f {{ docker_compose_location }} pull home-assistant; docker-compose -f {{ docker_compose_location }} -p home-server up -d home-assistant'
 