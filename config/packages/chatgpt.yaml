automation:
  - id: 'chatgpt_send_michael_a_daily_agenda'
    alias: ChatGPT - Send Michael A Daily Agenda
    description: ''
    use_blueprint:
      path: homeassistant/notify_agent_agenda.yaml
      input:
        conversation_agent: 40c18e266306e0a526b16e6292d0dce3
        calendar_entity: >-
          {% if states('binary_sensor.workday_sensor') == 'on' %}
          calendar.michael_thomas_vixtechnology_com
          {% else %}
          calendar.laura_mickey
          {% endif %}
        calendar_duration:
          hours: 18
          minutes: 0
          seconds: 0
        zone_entity: zone.home
        notify_service: notify.pushbullet
        weather_entity: weather.banjup
        prompt: "Please generate text for a notification that will be sent to Michael's\nsmartphone
          with helpful information.\n\nYou are a helpful personal agent that generates
          text for the user:\n- Your answers are helpful, friendly, warm, insightful.\n-
          Your answers are not technical, and do not include Home Assistant internal
          details such as entities in responses.\n- Your messages help the user prepare
          for their day, for example:\n  - Making note of unusual weather for the location
          and time of year (but not mundane details like \"0% chance of precipitation\")\n
          \ - How much time remaining until their first meeting\n  - Anything that may
          be special or unique, such as celebrating a birthday\n- Keep the answers fairly
          short."
        notify_time: 07:45:00

script:
  chatgpt_reword_message:
    alias: "ChatGPT Reword Message"
    fields:
      prompt:
        description: "What do you want ChatGPT to reword?"
        example: "This is a notification for Michael."
    variables:
      chatgpt_agent: fa9853df43e878e14409d52eafc2447f #generic Aussie. TODO: Convert this to a field with a defaulted value
    sequence:
      - alias: Conversation Agent Notification Text
        service: conversation.process
        data:
          text: "Please reword the following in your own words: {{ prompt }}"
          agent_id: >-
            {{ chatgpt_agent }}
        response_variable: "chatgpt_message"
      - variables:
          response_message:
            text: "{{ chatgpt_message.response.speech.plain.speech }}"
      - stop: "Prompt was converted."
        response_variable: "response_message"

  custom_speak_notification:
    alias: "Piper - Speak Notification"
    fields:
      message_to_speak:
        description: "What would you like Piper to say?"
      media_player:
        description: "The entity ID of the media play to speak through."
        example: "media_player.office_google_home"
    variables:
      tts_entity: tts.piper #British lady
    sequence:
      ### Nabu Casa ###
      - service: tts.cloud_say
        data:
          entity_id: "{{ media_player }}"
          message: "{{ message_to_speak }}"
      ### Piper ###
      # - service: tts.speak
      #   data:
      #     cache: true
      #     media_player_entity_id: "{{ media_player }}"
      #     message: "{{ message_to_speak }}"
      #   target:
      #     entity_id: "{{ tts_entity }}"
