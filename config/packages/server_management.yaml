sensor:
  - platform: rest
    name: healthcheckio
    resource: !secret healthcheckio_ping_location
    scan_interval: 300

  - platform: systemmonitor
    resources:
      - type: memory_use
      - type: memory_free
      - type: memory_use_percent
      - type: swap_use_percent
      - type: swap_use
      - type: swap_free
      - type: network_in
        arg: eno1
      - type: network_out
        arg: eno1
      - type: throughput_network_in
        arg: eno1
      - type: throughput_network_out
        arg: eno1
      - type: packets_in
        arg: eno1
      - type: packets_out
        arg: eno1
      - type: processor_use
      - type: processor_temperature
      - type: last_boot

automation:
  #if server is getting too hot, send a push notification.
  - alias: Server Management - Notify If Server Temperature Too Hot
    id: server_management_notify_if_server_temperature_too_hot
    trigger:
      - platform: numeric_state
        entity_id: sensor.server_cupboard_temperature
        above: 40
      - platform: numeric_state
        entity_id: sensor.processor_temperature
        above: 90
    action:
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          title: "WARNING: The server is getting hot!"
          message: "Processor temperature: {{ states('sensor.processor_temperature') }}, cupboard temperature: {{ states('sensor.server_cupboard_temperature') }}"