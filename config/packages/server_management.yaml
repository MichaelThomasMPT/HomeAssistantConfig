binary_sensor:
  - platform: rest
    resource: !secret sonarr_indexer_testall_url
    headers:
      X-API-KEY: !secret sonarr_api_key
    method: POST
    name: Sonarr VPN Status
    device_class: connectivity
    value_template: "{{ 'False' not in (value_json | map(attribute='isValid') | join(', ')) }}"

rest_command:
  restart_server_vpn:
    url: !secret olivetin_api_url
    method: post
    payload: '{"actionName": "Restart VPN"}'

sensor:
  - platform: rest
    name: healthcheckio
    resource: !secret healthcheckio_ping_location
    scan_interval: 300

  - platform: systemmonitor
    resources:
      - type: memory_use
      - type: memory_free
      - type: memory_use_percent
      - type: swap_use_percent
      - type: swap_use
      - type: swap_free
      - type: network_in
        arg: eno1
      - type: network_out
        arg: eno1
      - type: throughput_network_in
        arg: eno1
      - type: throughput_network_out
        arg: eno1
      - type: packets_in
        arg: eno1
      - type: packets_out
        arg: eno1
      - type: processor_use
      - type: processor_temperature
      - type: last_boot

#Change the Synology NAS/Theatre Room TV VPN Connection
shell_command:
  nas_vpn_disconnect: >
    ssh {{ nas_ssh_connection_string }} 'bash /volume1/NAS\ Config/VPN\ Scripts/disconnectfromvpn.sh'
  nas_vpn_connect_japan: >
    ssh {{ nas_ssh_connection_string }} 'bash /volume1/NAS\ Config/VPN\ Scripts/connecttovpn.sh NordVPN_Japan'
  nas_vpn_connect_uk: >
    ssh {{ nas_ssh_connection_string }} 'bash /volume1/NAS\ Config/VPN\ Scripts/connecttovpn.sh NordVPN_UK'
  nas_vpn_connect_usa: >
    ssh {{ nas_ssh_connection_string }} 'bash /volume1/NAS\ Config/VPN\ Scripts/connecttovpn.sh NordVPN_USA'
script:
  nas_vpn_connect:
    alias: Connect NAS VPN
    fields: 
      vpnCountry:
        name: VPN & Country
        description: "The VPN and Country to connect to"
        selector:
          select:
            options:
              - None
              - NordVPN - Japan
              - NordVPN - UK
              - NordVPN - USA
    sequence:
      - choose:
          - conditions: >
              {{ vpnCountry == "None" }}
            sequence:
              - service: shell_command.nas_vpn_disconnect
                data: 
                  nas_ssh_connection_string: !secret nas_ssh_connection_string
          - conditions: >
              {{ vpnCountry == "NordVPN - Japan" }}
            sequence:
              - service: shell_command.nas_vpn_connect_japan
                data: 
                  nas_ssh_connection_string: !secret nas_ssh_connection_string
          - conditions: >
              {{ vpnCountry == "NordVPN - UK" }}
            sequence:
              - service: shell_command.nas_vpn_connect_uk
                data: 
                  nas_ssh_connection_string: !secret nas_ssh_connection_string
          - conditions: >
              {{ vpnCountry == "NordVPN - USA" }}
            sequence:
              - service: shell_command.nas_vpn_connect_usa
                data: 
                  nas_ssh_connection_string: !secret nas_ssh_connection_string
    mode: single
sensor:
  - platform: command_line
    name: NAS VPN Location
    command: ssh -i /config/ssh/id_rsa -o 'StrictHostKeyChecking=no' root@192.168.1.222 -p 222 'curl ipinfo.io'
    json_attributes:
      - city
      - region
      - country
    scan_interval: 30
    value_template: "{{ value_json.ip }}"
template:
  - sensor:
      - name: "NAS VPN Geographical Location"
        state: >
          {{  state_attr('sensor.nas_vpn_location', 'city') + ', ' 
            + state_attr('sensor.nas_vpn_location', 'region') + ', ' 
            + state_attr('sensor.nas_vpn_location', 'country') }}

automation:
  #if server is getting too hot, send a push notification.
  - alias: Server Management - Notify If Server Temperature Too Hot
    id: server_management_notify_if_server_temperature_too_hot
    trigger:
      - platform: numeric_state
        entity_id: sensor.server_cupboard_temperature
        above: 40
      - platform: numeric_state
        entity_id: sensor.processor_temperature
        above: 90
    action:
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          title: "WARNING: The server is getting hot!"
          message: "Processor temperature: {{ states('sensor.processor_temperature') }}, cupboard temperature: {{ states('sensor.server_cupboard_temperature') }}"
  - alias: Server Management - Restart VPN if Sonarr disconnected for too long
    id: server_management_restart_vpn_if_sonarr_disconnected_for_too_long
    trigger:
      - platform: state
        entity_id: binary_sensor.sonarr_vpn_status
        to:  "off"
        for:
          minutes: 20
    action:
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          title: "The VPN was automatically restarted"
          message: "Sonarr had lost conenction to the VPN."
          data:
            group: "VPN_Restart"
      - service: rest_command.restart_server_vpn
      #TODO: If still not fixed after a further 20 minutes, alert me (or try again?)
      