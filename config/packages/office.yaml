binary_sensor:
  - platform: ping
    host: !secret device_michael_pc_ip_address
    name: Michael PC
    count: 2
    scan_interval: 5
  - platform: ping
    host: !secret device_laura_pc_ip_address
    name: Laura PC
    count: 2
    scan_interval: 5
  - platform: ping
    host: !secret device_michael_work_laptop_ip_address
    name: Michael Work Laptop
    count: 2
    scan_interval: 5
  - platform: ping
    host: !secret device_laura_work_laptop_ip_address
    name: Laura Work Laptop
    count: 2
    scan_interval: 5
  - platform: group
    name: Michael In Meeting
    entities:
      - binary_sensor.michael_desktop_in_meeting
      - binary_sensor.michael_work_in_meeting 

input_number:
  office_blinds_height:
    name: Office Blinds Height
    min: 0
    max: 100
    step: 10
    unit_of_measurement: "%"
    icon: mdi:roller-shade

automation:
  - alias: Front Hall - Turn On Hallway Light If PC Turned Off At Night
    id: front_hall_turn_on_hallway_light_if_pc_turned_off_at_night
    trigger:
      platform: state
      entity_id: binary_sensor.michael_pc
      to: "off"
      from: "on"
    condition:
      condition: state  # from sunset until sunrise
      entity_id: sun.sun
      state: 'below_horizon'
    action:
      - service: light.turn_on
        entity_id:
          - light.entry_hall_lights
      - delay:
          minutes: 5
      - service: light.turn_off
        entity_id:
          - light.entry_hall_lights

  - alias: Office - When Black Ink Low, Add To List
    id: office_when_black_ink_low_add_to_list
    trigger:
      platform: numeric_state
      entity_id: sensor.canon_ts3300_series_black
      below: 20
    condition:
      - condition: template #Only add it to the shopping list once
        value_template: "{{ 'Black ink (PG-645 or PG-645XL)' not in state_attr('calendar.groceries_list', 'all_tasks') }}"
    action:
      - service: todoist.new_task
        data:
          content: Black ink (PG-645 or PG-645XL)
          project: Groceries List
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: Black printer ink is running low and has been added to your shopping list.

  - alias: Office - When Colour Ink Low, Add To List
    id: office_when_colour_ink_low_add_to_list
    trigger:
      platform: numeric_state
      entity_id: sensor.canon_ts3300_series_color
      below: 20
    condition:
      - condition: template #Only add it to the shopping list once
        value_template: "{{ 'Colour ink (PG-646 or PG-646XL)' not in state_attr('calendar.groceries_list', 'all_tasks') }}"
    action:
      - service: todoist.new_task
        data:
          content: Colour ink (PG-646 or PG-646XL)
          project: Groceries List
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: Colour printer ink is running low and has been added to your shopping list.

  - alias: Office - Toggle Lamp With Laura's Switch
    id: office_toggle_lamp_with_laura_switch
    trigger: 
      - platform: event
        event_type: zha_event
        event_data: 
          device_ieee: !secret zha_laura_office_lights_switch
          command: "single"
    action:
      - choose:
        # If lamp is off, turn it on
          - conditions:
              - condition: state
                entity_id: light.office_lamp
                state: "off"
            sequence: 
              - service: light.turn_on
                target:
                  entity_id: light.office_lamp
                data:
                  brightness: 160
                  color_temp: 400
        # Otherwise turn off the lamp
        default:
          - service: light.turn_off
            entity_id: light.office_lamp

  - alias: Office - Turn On Lamp When Michael Is In A Meeting
    id: office_turn_on_lamp_when_michael_is_in_a_meeting
    trigger: 
      - platform: state
        entity_id: binary_sensor.michael_in_meeting
        to: "on"
    action:
      - service: scene.create
        data:
          scene_id: office_lamp_original_state
          snapshot_entities:
            - light.office_lamp
      - service: light.turn_on
        target:
          entity_id: light.office_lamp
        data:
          brightness_pct: 1
          color_name: "red"
      - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.michael_in_meeting
            to: "off"
      - service: scene.turn_on
        entity_id: scene.office_lamp_original_state

  - alias: Office - Blinds Open In The Morning
    id: office_blinds_open_in_the_morning
    trigger: 
      - platform: time
        at: 
          - '08:00:00'
    condition:
      - condition: state  # from sunset until sunrise
        entity_id: alarm_control_panel.alarm_com
        state: 'disarmed'
    action:
      - service: input_number.set_value
        data:
          value: 100
        target:
          entity_id: input_number.office_blinds_height

  - alias: Office - Blinds Mid At Lunch Time
    id: office_blinds_mid_at_lunch_time
    trigger: 
      - platform: time
        at: 
          - '12:30:00'
    condition:
      - condition: state  # from sunset until sunrise
        entity_id: alarm_control_panel.alarm_com
        state: 'disarmed'
    action:
      - service: input_number.set_value
        data:
          value: 40
        target:
          entity_id: input_number.office_blinds_height

  - alias: Office - Blinds Close When Required
    id: office_blinds_close_when_required
    trigger: 
      - platform: state
        entity_id: 
          - alarm_control_panel.alarm_com
        to:
          - "armed_home"
          - "armed_away"
      - platform: time
        at: 
          - '23:30:00'
    action:
      - service: input_number.set_value
        data:
          value: 0
        target:
          entity_id: input_number.office_blinds_height

  - alias: Office - Blinds Set Height Manually
    id: office_blinds_set_height_manually
    trigger: 
      - platform: state
        entity_id: 
          - input_number.office_blinds_height
    action:
      - service: cover.set_cover_position
        target:
          entity_id: cover.office_blinds
        data:
          position: '{{ states("input_number.office_blinds_height") }}'

  - alias: Office - Mute Office Speakers When Michael Is In A Meeting
    id: office_mute_office_speakers_when_michael_is_in_a_meeting
    trigger: 
      - platform: state
        entity_id: binary_sensor.michael_in_meeting
        to: "on"
    action:
      - service: media_player.volume_mute
        data:
          is_volume_muted: true
        target:
          entity_id: 
            - media_player.office_google_home
            - media_player.office_pc_speakers
      - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.michael_in_meeting
            to: "off"
      - service: media_player.volume_mute
        data:
          is_volume_muted: false
        target:
          entity_id: 
            - media_player.office_google_home
            - media_player.office_pc_speakers

  - alias: Office - Mute Office Speaker When Laura Is In A Meeting
    id: office_mute_office_speaker_when_laura_is_in_a_meeting
    mode: restart
    trigger:
      - platform: event
        event_type: zha_event
        event_data: 
          device_ieee: !secret zha_laura_office_aircon_button
          #command: "on"
    action:
      - service: media_player.volume_mute
        data:
          is_volume_muted: true
        target:
          entity_id: 
            - media_player.office_google_home
            - media_player.office_pc_speakers
      - choose:
          - conditions:
              - "{{ trigger.event.data.command == 'off' }}"
            sequence:
              - delay:
                  minutes: 30
          - conditions:
              - "{{ trigger.event.data.command == 'on' }}"
            sequence:
              - delay:
                  minutes: 60
      - service: media_player.volume_mute
        data:
          is_volume_muted: false
        target:
          entity_id: 
            - media_player.office_google_home
            - media_player.office_pc_speakers

script:
  flash_office_lamp:
    fields:
      colour:
        description: "What colour to flash the lamp"
        example: "green"
    sequence:
      - service: light.turn_on
        target:
          entity_id: light.office_lamp
        data:
          brightness_pct: 50
          color_name: "{{colour}}"
      - delay:
          seconds: 1
      - choose:
          #if in meeting, return the light to a red colour
          - conditions:
              - condition: state
                entity_id: binary_sensor.michael_in_meeting
                state: "on"
            sequence: 
              - service: light.turn_on
                target:
                  entity_id: light.office_lamp
                data:
                  brightness_pct: 1
                  color_name: "red"
        #if not in a meeting, turn the light off
        default:
          - service: light.turn_off
            entity_id: light.office_lamp