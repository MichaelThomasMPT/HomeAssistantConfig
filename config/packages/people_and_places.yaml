homeassistant:
  # Location required to calculate the time the sun rises and sets
  latitude: !secret zone_home_latitude
  longitude: !secret zone_home_longitude
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Australia/Perth
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0

input_boolean:
  holiday_mode:
    name: Holiday Mode
    icon: mdi:palm-tree

ios:

zone:
  - name: Michael's Work
    latitude: !secret zone_michael_work_latitude
    longitude: !secret zone_michael_work_longitude
    radius: 100
    icon: mdi:briefcase

  # This will override the default home zone
  - name: Home
    latitude: !secret zone_home_latitude
    longitude: !secret zone_home_longitude
    radius: 220
    icon: mdi:home

  - name: Capel House
    latitude: !secret zone_capel_house_latitude
    longitude: !secret zone_capel_house_longitude
    radius: 100
    icon: mdi:home

  - name: Laura's Work
    latitude: !secret zone_laura_work_latitude
    longitude: !secret zone_laura_work_longitude
    radius: 220
    icon: mdi:briefcase

  - name: Local Train Station
    latitude: !secret zone_local_train_station_latitude
    longitude: !secret zone_local_train_station_longitude
    radius: 200
    icon: mdi:train

  - name: Crown Perth
    latitude: -31.9597198
    longitude: 115.8943751
    radius: 400
    icon: mdi:dice-6

automation:
  - alias: Location - Notify Michael If Laura Leaving Work
    id: location_notify_michael_if_laura_leaving_work
    trigger:
      platform: zone
      entity_id: device_tracker.lauras_iphone
      zone: zone.laura_s_work
      event: leave
    condition:
      - condition: time
        after: "16:00:00"
        before: "19:00:00"
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: "on"
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: "Laura is leaving work."
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: "{{ chatgpt_response.text }}"
          data:
            notification_icon: "mdi:face-woman"

  - alias: Location - Notify Laura If Michael Leaving Work
    id: location_notify_laura_if_michael_leaving_work
    trigger:
      platform: zone
      entity_id: device_tracker.michael_galaxy_s10
      zone: zone.michael_s_work
      event: leave
    condition:
      - condition: time
        after: "16:00:00"
        before: "19:00:00"
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: "on"
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: "Michael is leaving work."
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_lauras_iphone
        data:
          message: "{{ chatgpt_response.text }}"

  #Notify when someone comes homes
  - alias: Location - Notify When Someone Comes Home
    id: location_notify_when_someone_comes_home
    initial_state: false
    trigger:
      - platform: state
        entity_id: cover.garage_door
        to: "open"
      - platform: state
        entity_id: sensor.alarmdotcom_front_door
        to: "Open"
      - platform: state
        entity_id: 
          - binary_sensor.garage_door_internal
          - binary_sensor.front_door
        to: "on"
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: "Someone has come home."
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: "{{ chatgpt_response.text }}"
          data:
            notification_icon: "mdi:door"
      - service: automation.turn_off
        entity_id:
          - automation.location_notify_when_someone_comes_home

  - alias: Location - Notify Michael When Leaving Home Without Laptop
    id: location_notify_michael_when_leaving_home_without_laptop
    trigger:
      - platform: zone
        entity_id: person.michael
        zone: zone.home
        event: leave
    condition:
      - condition: time
        after: "06:00:00"
        before: "09:00:00"
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: "on"
      - condition: state
        entity_id: binary_sensor.michael_work_laptop
        state:  "on" #Laptop is still plugged in to desk
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: "Did you forget to bring your work laptop with you?"
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: "{{ chatgpt_response.text }}"
          data:
            notification_icon: "mdi:laptop"

  - alias: Location - Remind Michael To Pay For Train Parking
    id: location_remind_michael_to_pay_for_train_parking
    mode: single
    trigger:
      - platform: state
        entity_id:
          - sensor.michael_s_galaxy_s10_bluetooth_connection
    variables: 
      mazda_mac_address: !secret mazda_bluetooth_mac_address
    condition:
      - alias: "Check whether the Mazda was just disconnected"
        condition: template
        value_template: >
          {{ 
            mazda_mac_address not in state_attr('sensor.michael_s_galaxy_s10_bluetooth_connection', 'connected_paired_devices')
            and mazda_mac_address in trigger.from_state.attributes['connected_paired_devices']
          }}
      - alias: "Check whether Michael is at the train station"
        condition: zone
        entity_id: person.michael
        zone: zone.local_train_station
    action:
      - delay:
          minutes: 2
      - service: script.chatgpt_reword_message
        data:
          prompt: "Don't forget to pay for parking! "
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: "{{ chatgpt_response.text }}"
          data:
            color: '#FFA000'
            ttl: 0
            priority: high
            notification_icon: "mdi:car"

  - alias: Location - Remind Laura To Pay For Train Parking
    id: location_remind_laura_to_pay_for_train_parking
    mode: single
    trigger:
      platform: state
      entity_id: person.laura
      to: 'Local Train Station'
      for:
        minutes: 1
        seconds: 30
    condition:       
      - condition: time
        before: "15:00:00"
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: "Don't forget to pay for parking!"
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_lauras_iphone
        data:
          message: "{{ chatgpt_response.text }}"

  - alias: Location - Turn Night Lights On When Arriving Home After Dark
    id: location_turn_night_lights_on_when_disarming_after_dark
    mode: single
    trigger:
      - platform: state
        entity_id: 
          - binary_sensor.front_door
          - binary_sensor.garage_door_internal
        from: "off"
        to: "on"
    condition:
      - condition: state  # from sunset until sunrise
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: or
        conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_com
            state: 'armed_away'
            for:
              minutes: 5
          - condition: state
            entity_id: alarm_control_panel.alarm_com
            state: 'armed_home'
            for:
              minutes: 5
    action:
      - service: scene.turn_on
        target:
          entity_id: scene.living_room_soft_lighting

  - alias: Location - Remind Laura Not To Leave Lunch At Work
    id: location_remind_laura_not_to_leave_lunch_at_work
    mode: single #prevents reminding multiple times too quickly
    trigger:
      - platform: zone
        entity_id: device_tracker.lauras_iphone
        zone: zone.laura_s_work
        event: leave
      - platform: state
        entity_id: sensor.lauras_iphone_ssid
        from: "BYOD"
    condition:
      - condition: time
        after: "15:00:00"
        before: "19:00:00"
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: "on"
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: "Don't forget to remove your lunch from the work fridge!"
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_lauras_iphone
        data:
          message: "{{ chatgpt_response.text }}"
      - delay: 
          minutes: 15 #prevents reminding multiple times too quickly 

  - alias: Location - Remind Me To Bring My Crown Rewards Card
    id: location_remind_me_to_bring_my_crown_rewards_card
    trigger:
      #Check 8 hours and 1 hour before each event in either calendar.
      - platform: calendar
        event: start
        entity_id: calendar.laura_mickey
        offset: "-08:00:00"
      - platform: calendar
        event: start
        entity_id: calendar.laura_mickey
        offset: "-01:00:00"
      - platform: calendar
        event: start
        entity_id: calendar.personal
        offset: "-08:00:00"
      - platform: calendar
        event: start
        entity_id: calendar.personal
        offset: "-01:00:00"
    condition:
      #If the event contains Crown Perth or Crown Metropol Perth in the location
      - condition: template
        value_template: '{{ trigger.calendar_event.location is search(".*Crown (Metropol )?Perth.*", ignorecase=True) }}'
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: "Don't forget your 'Crown Rewards Card'. You may need it when you go to {{trigger.calendar_event.summary}}."
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          title: "Remember Your Crown Rewards Card"
          message: "{{ chatgpt_response.text }}"
          data:
            group: "Crown Rewards"
            notification_icon: "mdi:crown-circle"

  - alias: Wedding - Notify Us When Someone Responds To The Wedding SaveDate
    id: wedding_notify_us_when_someone_responds_to_the_wedding_savedate
    trigger:
      - platform: webhook
        webhook_id: !secret wedding_savedate_webhook_id
        allowed_methods:
          - POST
        local_only: false
    action:
      - variables:
          message_text: >-
            {% if (trigger.json.person2 is not defined) or (trigger.json.person2 is none) or ( (trigger.json.person2 | trim) == "") %}
              {{ trigger.json.person1 }} has saved the date!
            {% else %}
              {{ trigger.json.person1 | trim }} and {{ trigger.json.person2 | trim }} have saved the date!
            {% endif %}
      - parallel:
          - sequence: #Notify Michael
              - service: notify.mobile_app_michael_s_galaxy_s10
                data:
                  title: "A Wedding Guest Has Responded"
                  message: "{{ message_text }}"
                  data:
                    group: "Wedding"
                    color: "#ff00c8"
                    notification_icon: "mdi:heart"
          - sequence: #Notify Laura
              - service: notify.mobile_app_lauras_iphone
                data:
                  title: "A Wedding Guest Has Responded"
                  message: "{{ message_text }}"
          - sequence: #Notify TV if it is on
              - alias: "Check if TV is on before notifying it"
                condition: state
                entity_id: media_player.theatre_room_tv
                state: "on"
              - service: notify.theatre_room_tv
                data:
                  message: "{{ message_text }}"
          - sequence: #Change curtains to love heart briefly, then back again
              - service: scene.create
                data:
                  scene_id: curtain_original_state
                  snapshot_entities:
                    - light.curtain_left
              - service: light.turn_on
                target:
                  entity_id: light.curtain_left
                data:
                  effect: "7 Heart"
              - delay:
                  seconds: 20
              - service: scene.turn_on
                data:
                  entity_id: scene.curtain_original_state

person:
  - name: Michael
    id: michael
    user_id: 0e77a256b08c47f7989413c4599cc865
    device_trackers:
      - device_tracker.michael_galaxy_s10
      - device_tracker.phone_ping_michael
  - name: Laura
    id: laura
    user_id: c93d4309ba8141eabe4a306b2fb5ecc7
    device_trackers:
      - device_tracker.lauras_iphone
      - device_tracker.phone_ping_laura
