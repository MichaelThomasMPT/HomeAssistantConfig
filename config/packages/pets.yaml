input_boolean:
  dog_needs_feeding:
    name: Dog Needs Feeding
    icon: mdi:dog
binary_sensor:
  - platform: tod
    name: breakfast
    after: "07:00"
    before: "11:00"
  # - platform: tod
  #   name: lunch
  #   after: "11:00"
  #   before: "15:00"
  - platform: tod
    name: dinner
    after: "17:00"
    before: "21:00"

automation:
  - alias: Pets - Notify Me If Dog Door Is Used
    id: pets_notify_me_if_dog_door_is_used
    trigger:
      - platform: state
        entity_id: binary_sensor.dog_door
        from: 'off'
        to: 'on'
    action:
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: The dog door was used!
          data:
            group: Dog Door
            tag: dog_door
            color: 'green'
            ttl: 0
            notification_icon: "mdi:dog-side"
      - delay:
          minutes: 1

  - alias: Pets - Turn On Flood Lights If Dog Door Is Used
    id: pets_turn_on_flood_lights_if_dog_door_is_used
    trigger:
      - platform: state
        entity_id: binary_sensor.dog_door
        from: 'off'
        to: 'on'
    condition:
      - condition: state #from sunset until sunrise
        entity_id: sun.sun
        state: "below_horizon"
    action:
      - service: scene.create
        data:
          scene_id: flood_lights_state
          snapshot_entities: light.garden_flood_lights
      - service: light.turn_on
        target:
          entity_id: light.garden_flood_lights
      - delay:
          minutes: 5
      - service: scene.turn_on
        target:
          entity_id: scene.flood_lights_state

  - alias: Pets - Toggle Living Room Lights
    id: pets_toggle_living_room_lights
    trigger: 
      - platform: event
        event_type: deconz_event
        event_data: 
          id: artemis_light_switch
          event: 1002 #short press
      - platform: event
        event_type: deconz_event
        event_data: 
          id: artemis_light_switch
          event: 1001 #long press
    action:
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: Artemis pushed the lights button! 
      - choose:
        # If living room light is off, turn it on
          - conditions:
              - condition: state
                entity_id: light.living_room
                state: "off"
            sequence: 
              - service: light.turn_on
                target:
                  entity_id: light.living_room
        # Otherwise turn off all the central living lights
        default:
          - service: light.turn_off
            entity_id: 
              - light.living_room
              - light.dining_room
              - light.kitchen_lights

  - alias: Pets - Pretend To Ring Doorbell
    id: pets_pretend_to_ring_doorbell
    trigger: 
      - platform: time
        at: 
          - '09:58:00'
          - '11:58:00'
          - '14:58:00'
          - '17:58:00'
    condition:
      - condition: state
        entity_id: input_boolean.holiday_mode
        state: "off" #don't run if on holiday
    action:
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          message: "This is a fake doorbell to desensitise the dog."
          data:
            group: "Doggy Doorbell"
      - service: notify.mobile_app_lauras_iphone
        data:
          message: "This is a fake doorbell to desensitise the dog."
      - service: media_player.play_media
        data:
          entity_id: media_player.central_living
          media_content_id: '/local/sounds/doorbell.mp3'
          media_content_type: 'audio/mp3'

    # Toggle Dog Alerts
  - alias: Pets - Toggle Dog Meal Time On
    id: pets_toggle_dog_meal_time_on
    trigger: 
      - platform: state
        entity_id: 
          - binary_sensor.breakfast
          # - binary_sensor.lunch
          - binary_sensor.dinner
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.holiday_mode
        state: "off" #don't run if on holiday
    action:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.dog_needs_feeding
  - alias: Pets - Toggle Dog Meal Time Off
    id: pets_toggle_dog_meal_time_off
    trigger: 
      - platform: state
        entity_id: binary_sensor.dog_biscuit_box
        to: 'on'
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: dog_was_already_fed
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.dog_needs_feeding
    # Alert Michael
  - alias: Pets - Alert Michael If Dog Not Fed
    id: pets_dog_not_fed_alert_michael
    trigger: 
      - platform: state
        entity_id: input_boolean.dog_needs_feeding
        to: 'on'
        for: '03:00:00'
    action:
        # don't alert me if I'm not home as I can't do anything about it
      - alias: "Wait until Michael has come home"
        wait_template: "{{ is_state('person.michael', 'home') }}"
        # once I get home, don't bother reminding me if the dog has since been fed
      - condition: state
        entity_id: input_boolean.dog_needs_feeding
        state:  'on'
      - service: script.chatgpt_reword_message
        data:
          prompt: >-
            Don't forget to feed the dog her 
            {{ 
              state_attr("binary_sensor.breakfast", "friendly_name") if states("binary_sensor.breakfast") == "on" 
              else state_attr("binary_sensor.lunch", "friendly_name") if states("binary_sensor.lunch") == "on"
              else state_attr("binary_sensor.dinner", "friendly_name") if states("binary_sensor.dinner") == "on"
            }}!
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_michael_s_galaxy_s10
        data:
          title: "Artemis needs food"
          message: "{{ chatgpt_response.text }}"
          data:
            notification_icon: "mdi:dog-side"
            actions:
              - action: 'dog_was_already_fed'
                title: The Dog Was Already Fed
    # Alert Laura
  - alias: Pets - Alert Laura If Dog Not Fed
    id: pets_dog_not_fed_alert_laura
    trigger: 
      - platform: state
        entity_id: input_boolean.dog_needs_feeding
        to: 'on'
        for: '03:00:00'
    action:
        # don't alert laura if she's not home as she can't do anything about it
      - alias: "Wait until Laura has come home"
        wait_template: "{{ is_state('person.laura', 'home') }}"
        # once she gets home, don't bother reminding her if the dog has since been fed
      - condition: state
        entity_id: input_boolean.dog_needs_feeding
        state:  'on'
      - service: script.chatgpt_reword_message
        data:
          prompt: >-
            Don't forget to feed the dog her 
            {{ 
              state_attr("binary_sensor.breakfast", "friendly_name") if states("binary_sensor.breakfast") == "on" 
              else state_attr("binary_sensor.lunch", "friendly_name") if states("binary_sensor.lunch") == "on"
              else state_attr("binary_sensor.dinner", "friendly_name") if states("binary_sensor.dinner") == "on"
            }}!
        response_variable: "chatgpt_response"
      - service: notify.mobile_app_lauras_iphone
        data:
          message: "{{ chatgpt_response.text }}"
    # Alert Google
  - alias: Pets - Alert The House If Dog Not Fed
    id: pets_dog_not_fed_alert_house
    trigger: 
      - platform: state
        entity_id: input_boolean.dog_needs_feeding
        to: 'on'
        for: '03:00:00'
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: >-
            Don't forget to feed the dog her 
            {{ 
              state_attr("binary_sensor.breakfast", "friendly_name") if states("binary_sensor.breakfast") == "on" 
              else state_attr("binary_sensor.lunch", "friendly_name") if states("binary_sensor.lunch") == "on"
              else state_attr("binary_sensor.dinner", "friendly_name") if states("binary_sensor.dinner") == "on"
            }}!
        response_variable: "chatgpt_response"
      - service: script.custom_speak_notification 
        data:
          message_to_speak: "{{ chatgpt_response.text }}"
          media_player: media_player.all_rooms
    # Make Sure Dog Isn't Fed Twice
  - alias: Pets - Make Sure Dog Doesn't Get Fed Twice
    id: pets_make_sure_dog_doesnt_get_fed_twice
    trigger: 
      - platform: state
        entity_id: binary_sensor.dog_biscuit_box
        to: 'on'
    condition: 
        # dog was previously fed
      - condition: state
        entity_id: input_boolean.dog_needs_feeding
        state: 'off'
        for: '00:05:00' #avoid triggering if opening and closing in the one feeding, such as when refilling the container
    action:
      - service: script.chatgpt_reword_message
        data:
          prompt: >-
            The dog has already been fed her
            {{ 
              state_attr("binary_sensor.breakfast", "friendly_name") if states("binary_sensor.breakfast") == "on" 
              else state_attr("binary_sensor.lunch", "friendly_name") if states("binary_sensor.lunch") == "on"
              else state_attr("binary_sensor.dinner", "friendly_name") if states("binary_sensor.dinner") == "on"
            }}, don't trust her! 
        response_variable: "chatgpt_response"
      - service: script.custom_speak_notification 
        data:
          message_to_speak: "{{ chatgpt_response.text }}"
          media_player: media_player.all_rooms
      - delay: 
          seconds: 60 #avoid multiple triggers in quick succession when putting the lid back on

  - alias: Pets - Turn On Living Room Light Briefly When Dog Uses Dog Door
    id: pets_turn_on_living_room_light_briefly_when_dog_uses_dog_door
    mode: restart #always on for at least 30 seconds from latest door push
    trigger:
    - platform: state
      entity_id:
      - binary_sensor.dog_door
    condition:
      - condition: state #from sunset until sunrise
        entity_id: sun.sun
        state: "below_horizon"
      - condition: time
        before: "07:00:00"
    action:
    - service: light.turn_on
      target:
        entity_id: light.living_room
    - delay:
        seconds: 30
    - service: light.turn_off
      target:
        entity_id: light.living_room

alert:
  pets_dog_bowl_is_empty:
    title: The Dog Bowl Is Empty
    name: Make sure to refill it before the pets get thirsty!
    entity_id: binary_sensor.dog_bowl_water_sensor_moisture
    state: "off"
    repeat: 
      - 30 #minutes between alerts once started
    can_acknowledge: false
    notifiers:
      - mobile_app_michael_s_galaxy_s10
      - mobile_app_lauras_iphone
    data:
      notification_icon: "mdi:water-alert"
      group: Dog Bowl
      color: '#0900bd'
      ttl: 0
      priority: high